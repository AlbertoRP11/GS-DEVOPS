// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Oracle.EntityFrameworkCore.Metadata;
using PURE.Data;

#nullable disable

namespace PURE.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240530220338_inital")]
    partial class inital
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PURE.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("Descricao");

                    b.Property<string>("EventDate")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("Data_Evento");

                    b.Property<string>("EventLocal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("Local_Evento");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("Nome_Eventp");

                    b.Property<float>("EventPoint")
                        .HasColumnType("BINARY_FLOAT")
                        .HasColumnName("Pontos_Evento");

                    b.Property<string>("InitialEventTime")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("Hora_Inicial_do_Evento");

                    b.Property<int>("UserId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("T_EVENTO");
                });

            modelBuilder.Entity("PURE.Models.EventoMock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("Descricao");

                    b.Property<string>("EventDate")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("Data_Evento");

                    b.Property<string>("EventLocal")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("Local_Evento");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("Nome_Eventp");

                    b.Property<float>("EventPoint")
                        .HasColumnType("BINARY_FLOAT")
                        .HasColumnName("Pontos_Evento");

                    b.Property<string>("InitialEventTime")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("Hora_Inicial_do_Evento");

                    b.HasKey("Id");

                    b.ToTable("T_EVENTO_MOCK");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Nesse encontro vamos fazer o máximo para limpar a nossa praia do cassino, contamos com voce!",
                            EventDate = "05/06/2024",
                            EventLocal = "Praia do Cassino, RS",
                            EventName = "Limpeza Praia do Cassino",
                            EventPoint = 160f,
                            InitialEventTime = "08:00"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Contamos com a ajuda de todos para que conseguimos limpar a praia e voltar sua beleza",
                            EventDate = "31/05/2024",
                            EventLocal = "Praia Bertioga, SP",
                            EventName = "Limpando a praia já!",
                            EventPoint = 90f,
                            InitialEventTime = "12:00"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Queremos deixar nossa praia o mais limpa possivel, venha ajudar a salvar o oceano conosco!!",
                            EventDate = "12/02/2024",
                            EventLocal = "Praia de Trindade, RJ",
                            EventName = "Deixando a praia limpa!",
                            EventPoint = 125f,
                            InitialEventTime = "09:00"
                        });
                });

            modelBuilder.Entity("PURE.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("Hash_Senha");

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("Email_Usuario");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)")
                        .HasColumnName("Nome_Usuario");

                    b.Property<bool>("isActive")
                        .HasColumnType("NUMBER(1)")
                        .HasColumnName("Usuario_Ativo");

                    b.HasKey("Id");

                    b.ToTable("T_USUARIO");
                });

            modelBuilder.Entity("PURE.Models.Evento", b =>
                {
                    b.HasOne("PURE.Models.Usuario", "Usuario")
                        .WithMany("Eventos")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("PURE.Models.Usuario", b =>
                {
                    b.Navigation("Eventos");
                });
#pragma warning restore 612, 618
        }
    }
}
